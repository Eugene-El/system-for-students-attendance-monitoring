
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

$tsi-blue: (
  50: #5a80a1,
  100: #316796,
  200: #316796,
  300: #144774,
  400: #144774,
  500: #144774,
  600: #144774,
  700: #144774,
  800: #144774,
  900: #144774,
  A100: #5a80a1,
  A200: #5a80a1,
  A400: #5a80a1,
  A700: #5a80a1,
  contrast: (
    50: white,
    100: white,
    200: white,
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: white,
    A200: white,
    A400: white,
    A700: white,
  )
);


// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$ClientSide-primary: mat-palette($tsi-blue);
$ClientSide-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$ClientSide-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$ClientSide-theme: mat-light-theme($ClientSide-primary, $ClientSide-accent, $ClientSide-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($ClientSide-theme);
